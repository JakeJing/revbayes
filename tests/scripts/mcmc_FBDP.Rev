################################################################################
#
# RevBayes Validation Test: Fossilized birth-death process
# 
# Model: Tree is drawn from a constant-rate fossilized birth-death process.
#            
#
# authors: Walker Pett
#
################################################################################

seed(12345)

#######################
# Reading in the Data #
#######################

### Read in taxon data

taxa <- readTaxonData("data/bears_taxa.tsv")

# set my move index
mvi = 0


##############
# Tree model #
##############

# Specify speciation, extinction and serial sampling rates
speciation_rate ~ dnExp(10)
extinction_rate ~ dnExp(10)
psi ~ dnExp(10)

# specify a prior on the origin age
origin_time ~ dnUnif(37.0, 55.0)

# create some moves that change the stochastic variables
# all moves are sliding proposals but you could use scaling proposals for the rates too
moves[mvi++] = mvSlide(speciation_rate,delta=1,weight=1)
moves[mvi++] = mvSlide(extinction_rate,delta=1,weight=1)
moves[mvi++] = mvSlide(psi,delta=1,weight=1)

### Define the tree-prior distribution as the fossilized birth-death process ###
fbd_dist = dnFBDP(origin=origin_time, lambda=speciation_rate, mu=extinction_rate, psi=psi, rho=1.0, taxa=taxa)

# The will be a random variable of a constrained topology distribution that is governed by the FBD #
# this distribution will generate FBD trees that match the monophyly constraints defined above #
clade_ursinae = clade("Melursus_ursinus", "Ursus_arctos", "Ursus_maritimus", 
                      "Helarctos_malayanus", "Ursus_americanus", "Ursus_thibetanus", 
                      "Ursus_abstrusus", "Ursus_spelaeus")
constraints = v(clade_ursinae)

fbd_tree ~ dnConstrainedTopology(fbd_dist, constraints=constraints)

moves[mvi++] = mvFNPR(fbd_tree, weight=1.0)
moves[mvi++] = mvCollapseExpandFossilBranch(fbd_tree, origin_time, weight=1.0)
moves[mvi++] = mvNodeTimeSlideUniform(fbd_tree, weight=1.0)
moves[mvi++] = mvRootTimeSlideUniform(fbd_tree, origin_time, weight=1.0)


#############
# THE Model #
#############

# We define our model.
# We can use any node of our model as a handle, here we chose to use the rate matrix.
mymodel = model(fbd_tree)


monitors[1] = mnStochasticVariable(filename="output/mcmc_FBDP.out",printgen=1, separator = TAB)

mymcmc = mcmc(mymodel, monitors, moves, moveschedule="single")


mymcmc.run(generations=1000)


# Read in the tree trace and construct the maximum clade credibility (MCC) tree #
trace = readTreeTrace("data/bears.trees")

# We will prune the fossil taxa for which we do not morphological or molecular data #
# Import the taxon list to easily access the taxon names
taxa <- readTaxonData("data/bears_taxa.tsv")

# Use a for-loop to prune each tree in the trace
for(i in 1:trace.size())
{
    trees[i] = fnPruneTree(trace.getTree(i), prune=v(taxa[17],taxa[20]))
}

# Create a tree-trace object from pruned tree list
trace_pruned = treeTrace(trees)

# Summarize tree trace and save MCC tree to file
mccTree(trace_pruned, file="output/mcmc_FBDP_mcc.tre" )


# you may want to quit RevBayes now
q()
